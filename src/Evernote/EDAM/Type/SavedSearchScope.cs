/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.16.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;

using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;
using Thrift.Transport;
using Thrift.Transport.Client;
using Thrift.Transport.Server;
using Thrift.Processor;


#nullable disable                // suppress C# 8.0 nullable contexts (we still support earlier versions)
#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Evernote.EDAM.Type
{

  /// <summary>
  /// A structure defining the scope of a SavedSearch.
  /// 
  /// <dl>
  ///   <dt>includeAccount</dt>
  ///   <dd>The search should include notes from the account that contains the SavedSearch.</dd>
  /// 
  ///   <dt>includePersonalLinkedNotebooks</dt>
  ///   <dd>The search should include notes within those shared notebooks
  ///   that the user has joined that are NOT business notebooks.</dd>
  /// 
  ///   <dt>includeBusinessLinkedNotebooks</dt>
  ///   <dd>The search should include notes within those shared notebooks
  ///   that the user has joined that are business notebooks in the business that
  ///   the user is currently a member of.</dd>
  /// </dl>
  /// </summary>
  public partial class SavedSearchScope : TBase
  {
    private bool _includeAccount;
    private bool _includePersonalLinkedNotebooks;
    private bool _includeBusinessLinkedNotebooks;

    public bool IncludeAccount
    {
      get
      {
        return _includeAccount;
      }
      set
      {
        __isset.includeAccount = true;
        this._includeAccount = value;
      }
    }

    public bool IncludePersonalLinkedNotebooks
    {
      get
      {
        return _includePersonalLinkedNotebooks;
      }
      set
      {
        __isset.includePersonalLinkedNotebooks = true;
        this._includePersonalLinkedNotebooks = value;
      }
    }

    public bool IncludeBusinessLinkedNotebooks
    {
      get
      {
        return _includeBusinessLinkedNotebooks;
      }
      set
      {
        __isset.includeBusinessLinkedNotebooks = true;
        this._includeBusinessLinkedNotebooks = value;
      }
    }


    public Isset __isset;
    public struct Isset
    {
      public bool includeAccount;
      public bool includePersonalLinkedNotebooks;
      public bool includeBusinessLinkedNotebooks;
    }

    public SavedSearchScope()
    {
    }

    public SavedSearchScope DeepCopy()
    {
      var tmp138 = new SavedSearchScope();
      if(__isset.includeAccount)
      {
        tmp138.IncludeAccount = this.IncludeAccount;
      }
      tmp138.__isset.includeAccount = this.__isset.includeAccount;
      if(__isset.includePersonalLinkedNotebooks)
      {
        tmp138.IncludePersonalLinkedNotebooks = this.IncludePersonalLinkedNotebooks;
      }
      tmp138.__isset.includePersonalLinkedNotebooks = this.__isset.includePersonalLinkedNotebooks;
      if(__isset.includeBusinessLinkedNotebooks)
      {
        tmp138.IncludeBusinessLinkedNotebooks = this.IncludeBusinessLinkedNotebooks;
      }
      tmp138.__isset.includeBusinessLinkedNotebooks = this.__isset.includeBusinessLinkedNotebooks;
      return tmp138;
    }

    public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        await iprot.ReadStructBeginAsync(cancellationToken);
        while (true)
        {
          field = await iprot.ReadFieldBeginAsync(cancellationToken);
          if (field.Type == TType.Stop)
          {
            break;
          }

          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Bool)
              {
                IncludeAccount = await iprot.ReadBoolAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 2:
              if (field.Type == TType.Bool)
              {
                IncludePersonalLinkedNotebooks = await iprot.ReadBoolAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 3:
              if (field.Type == TType.Bool)
              {
                IncludeBusinessLinkedNotebooks = await iprot.ReadBoolAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            default: 
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              break;
          }

          await iprot.ReadFieldEndAsync(cancellationToken);
        }

        await iprot.ReadStructEndAsync(cancellationToken);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
    {
      oprot.IncrementRecursionDepth();
      try
      {
        var tmp139 = new TStruct("SavedSearchScope");
        await oprot.WriteStructBeginAsync(tmp139, cancellationToken);
        var tmp140 = new TField();
        if(__isset.includeAccount)
        {
          tmp140.Name = "includeAccount";
          tmp140.Type = TType.Bool;
          tmp140.ID = 1;
          await oprot.WriteFieldBeginAsync(tmp140, cancellationToken);
          await oprot.WriteBoolAsync(IncludeAccount, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if(__isset.includePersonalLinkedNotebooks)
        {
          tmp140.Name = "includePersonalLinkedNotebooks";
          tmp140.Type = TType.Bool;
          tmp140.ID = 2;
          await oprot.WriteFieldBeginAsync(tmp140, cancellationToken);
          await oprot.WriteBoolAsync(IncludePersonalLinkedNotebooks, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if(__isset.includeBusinessLinkedNotebooks)
        {
          tmp140.Name = "includeBusinessLinkedNotebooks";
          tmp140.Type = TType.Bool;
          tmp140.ID = 3;
          await oprot.WriteFieldBeginAsync(tmp140, cancellationToken);
          await oprot.WriteBoolAsync(IncludeBusinessLinkedNotebooks, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        await oprot.WriteFieldStopAsync(cancellationToken);
        await oprot.WriteStructEndAsync(cancellationToken);
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override bool Equals(object that)
    {
      if (!(that is SavedSearchScope other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return ((__isset.includeAccount == other.__isset.includeAccount) && ((!__isset.includeAccount) || (global::System.Object.Equals(IncludeAccount, other.IncludeAccount))))
        && ((__isset.includePersonalLinkedNotebooks == other.__isset.includePersonalLinkedNotebooks) && ((!__isset.includePersonalLinkedNotebooks) || (global::System.Object.Equals(IncludePersonalLinkedNotebooks, other.IncludePersonalLinkedNotebooks))))
        && ((__isset.includeBusinessLinkedNotebooks == other.__isset.includeBusinessLinkedNotebooks) && ((!__isset.includeBusinessLinkedNotebooks) || (global::System.Object.Equals(IncludeBusinessLinkedNotebooks, other.IncludeBusinessLinkedNotebooks))));
    }

    public override int GetHashCode() {
      int hashcode = 157;
      unchecked {
        if(__isset.includeAccount)
        {
          hashcode = (hashcode * 397) + IncludeAccount.GetHashCode();
        }
        if(__isset.includePersonalLinkedNotebooks)
        {
          hashcode = (hashcode * 397) + IncludePersonalLinkedNotebooks.GetHashCode();
        }
        if(__isset.includeBusinessLinkedNotebooks)
        {
          hashcode = (hashcode * 397) + IncludeBusinessLinkedNotebooks.GetHashCode();
        }
      }
      return hashcode;
    }

    public override string ToString()
    {
      var tmp141 = new StringBuilder("SavedSearchScope(");
      int tmp142 = 0;
      if(__isset.includeAccount)
      {
        if(0 < tmp142++) { tmp141.Append(", "); }
        tmp141.Append("IncludeAccount: ");
        IncludeAccount.ToString(tmp141);
      }
      if(__isset.includePersonalLinkedNotebooks)
      {
        if(0 < tmp142++) { tmp141.Append(", "); }
        tmp141.Append("IncludePersonalLinkedNotebooks: ");
        IncludePersonalLinkedNotebooks.ToString(tmp141);
      }
      if(__isset.includeBusinessLinkedNotebooks)
      {
        if(0 < tmp142++) { tmp141.Append(", "); }
        tmp141.Append("IncludeBusinessLinkedNotebooks: ");
        IncludeBusinessLinkedNotebooks.ToString(tmp141);
      }
      tmp141.Append(')');
      return tmp141.ToString();
    }
  }

}
